apiVersion: v1
kind: Secret
metadata:
  name: {{ include "mysql.fullname" . }}-init-innodb-cluster-sh-secret
type: Opaque
stringData:
  init-innodb-cluster.sh: |
    INIT_CLUSTER_GEN='/mnt/init-cluster.js'
    INIT_CLUSTER_HOST="{{ include "mysql.fullname" . }}-node-0"
    MYSQL_CLUSTER_USER=$(echo $INNODB_CLUSTER_USER | base64 -d)
    MYSQL_CLUSTER_PWD=$(echo $INNODB_CLUSTER_PASSWORD | base64 -d)
    MYSQL_CLUSTER_PORT='1122'
    MYSQL_CLUSTER_HOST="$HOSTNAME"
    MYSQL_CLUSTER_NAME='db_cluster'

    MYSQL_ROUTER_HOST='test'
    MYSQL_ROUTER_PORT='test'

    if [[ $AUTOMATE_INNODB_CLUSTER_CREATION =~ 'false' ]]; then
        echo "AUTOMATE_INNODB_CLUSTER_CREATION is $AUTOMATE_INNODB_CLUSTER_CREATION, exiting script."
        exit 0;
    fi

    echo 'Starting innodb cluster creation script'
    echo 'waiting for 60 seconds, for pod RUNNING state'
    sleep 60

    while [[ 1 ]]; do
        echo "Checking mysql is running or not"
        
        mysql_status1=$(mysqladmin -u$MYSQL_CLUSTER_USER -p$MYSQL_CLUSTER_PWD -h$MYSQL_CLUSTER_HOST -P$MYSQL_CLUSTER_PORT ping) 
       
        mysql_status2=$(mysql -u$MYSQL_CLUSTER_USER -p$MYSQL_CLUSTER_PWD -h$MYSQL_CLUSTER_HOST -P$MYSQL_CLUSTER_PORT -e 'select 1 as col' | grep '1')

        mysql_init_file='/mysql-init-complete'

        mysql_status3=$(mysql -u$MYSQL_CLUSTER_USER -p$MYSQL_CLUSTER_PWD -h$INIT_CLUSTER_HOST -P$MYSQL_CLUSTER_PORT -e 'select 1 as col' | grep '1')

        if [[ $mysql_status1 =~ 'mysqld is alive' && $mysql_status2 = '1' && $mysql_status3 = '1' && -f "$mysql_init_file" ]]; then
            echo "mysql is running"
            echo "Executing innodb cluster initialization script, pls don't perfrom any operation in between"
            break
        else
            echo "mysql is not running, trying again after 10 seconds"
            sleep 10
        fi
    done

    echo 'Checking hostname postfix is numeric or not'
    # Generate mysql server-id from pod ordinal index.
    [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
    ordinal=${BASH_REMATCH[1]}

    if [[ $ordinal =~ '0' ]]; then
        echo 'Clearing GTID set if any exist' 
        mysql -u$MYSQL_CLUSTER_USER -p$MYSQL_CLUSTER_PWD -h$MYSQL_CLUSTER_HOST -P$MYSQL_CLUSTER_PORT -e 'reset master'

        echo 'Creating innodb cluster, hostname ordinal value is '$ordinal 
        echo "shell.connect('$MYSQL_CLUSTER_USER@$MYSQL_CLUSTER_HOST:$MYSQL_CLUSTER_PORT', '$MYSQL_CLUSTER_PWD');" > $INIT_CLUSTER_GEN

        echo "Creating innodb cluster as it is first mysql node." # debug

        echo "var cluster= dba.createCluster('$MYSQL_CLUSTER_NAME',{ipWhitelist:'$GR_IP_WHITELIST'});" >> $INIT_CLUSTER_GEN

        if [[ $MULTI_PRIMARY_MODE =~ 'true' ]]; then
            echo "cluster.switchToMultiPrimaryMode();" >> $INIT_CLUSTER_GEN    
        fi

        cat $INIT_CLUSTER_GEN  # debug
        mysqlsh --log-level=8 --verbose=4 -f $INIT_CLUSTER_GEN
    else
        echo 'Clearing GTID set if any exist' 
        mysql -u$MYSQL_CLUSTER_USER -p$MYSQL_CLUSTER_PWD -h$MYSQL_CLUSTER_HOST -P$MYSQL_CLUSTER_PORT -e 'reset master'
    
        echo 'Adding nodes in innodb cluster, hostname ordinal value is '$ordinal     
        echo "shell.connect('$MYSQL_CLUSTER_USER@$INIT_CLUSTER_HOST:$MYSQL_CLUSTER_PORT', '$MYSQL_CLUSTER_PWD');" > $INIT_CLUSTER_GEN

        echo "Adding this node to innodb cluster as it not a first mysql node." # debug
        
        echo "var cluster = dba.getCluster();" >> $INIT_CLUSTER_GEN
        
        echo "cluster.addInstance('$MYSQL_CLUSTER_USER@$MYSQL_CLUSTER_HOST:$MYSQL_CLUSTER_PORT',{password:'$MYSQL_CLUSTER_PWD',recoveryMethod:'incremental',ipWhitelist:'$GR_IP_WHITELIST'});" >> $INIT_CLUSTER_GEN
        
        cat $INIT_CLUSTER_GEN  # debug
        mysqlsh --log-level=8 --verbose=4 -f $INIT_CLUSTER_GEN
    fi
    rm -f /mnt/init-cluster.js 
